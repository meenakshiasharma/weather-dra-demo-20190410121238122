#!groovy
node {
    git url: 'https://github.com/xunrongl/DemoDRA-1.git'
    tool name: 'recent', type: 'nodejs'

    withEnv([
            // You need to specify 3 required environment variables and your bluemix credentials first, they are going to be used for the following IBM Cloud DevOps steps
            'IBM_CLOUD_DEVOPS_APP_NAME=Weather-V1-Scripted-umesh',
            'IBM_CLOUD_DEVOPS_TOOLCHAIN_ID=99106fe8-fae9-4123-bbd5-432dff7e92bc'
    ]) {
        //specify your bluemix credentials, please use "IBM_CLOUD_DEVOPS_CREDS_USR" for usernameVariable, "IBM_CLOUD_DEVOPS_CREDS_PSW" for passwordVariable
        withCredentials([string(credentialsId: 'IBM_CLOUD_DEVOPS_API_KEY', variable: 'IBM_CLOUD_DEVOPS_API_KEY')]) {
            // work around to get the git commit id
            def gitCommit = sh(returnStdout: true, script: "git rev-parse HEAD").trim()
            stage('Build') {
                withEnv(["GIT_COMMIT=${gitCommit}",
                         'GIT_BRANCH=master',
                         "GIT_REPO=GIT_REPO_URL_PLACEHOLDER"]) {
                    try {
                        sh 'ls -l'
                        //sh 'npm install'
                        //sh 'grunt dev-setup --no-color'

                        // use "publishBuildRecord" method to publish build record
                        publishBuildRecord gitBranch: "${GIT_BRANCH}", gitCommit: "${GIT_COMMIT}", gitRepo: "${GIT_REPO}", result:"SUCCESS"
                    }
                    catch (Exception e) {
                        publishBuildRecord gitBranch: "${GIT_BRANCH}", gitCommit: "${GIT_COMMIT}", gitRepo: "${GIT_REPO}", result:"FAIL"
                    }
                }
                stage('Unit Test and Code Coverage') {
                    //sh 'grunt dev-test-cov --no-color -f'
                    // use "publishTestResult" method to publish test result
                    publishTestResult type:'unittest', fileLocation: 'utf8-mocha.json'
                    //publishTestResult type:'code', fileLocation: './tests/coverage/reports/coverage-summary.json'
                }
                stage('Deploy to Staging') {
                    try {
                        // Push the Weather App to Bluemix, staging space
                                sh '''
                                echo "Deploying...."
                            '''
                        // use "publishDeployRecord" method to publish deploy record
                        publishDeployRecord environment: "STAGING", appUrl: "http://staging-umesh.mybluemix.net", result:"SUCCESS"
                    }
                    catch (Exception e) {
                        publishDeployRecord environment: "STAGING", appUrl: "http://staging-umesh.mybluemix.net", result:"FAIL"
                    }
                }
                stage('FVT') {
                   // withEnv(["APP_URL=http://staging-${IBM_CLOUD_DEVOPS_APP_NAME}.mybluemix.net"]) {
                        //sh 'grunt fvt-test --no-color -f'
                   // }

                    // use "publishTestResult" method to publish test result
                    publishTestResult type:'fvt', fileLocation: 'utf8-mocha.json', environment: 'STAGING'
                }
                stage('Gate') {
                    // use "evaluateGate" method to leverage IBM Cloud DevOps gate
                    evaluateGate policy: 'test', forceDecision: 'true'
                }
                stage('Deploy to Prod') {
                    try {
                        // Push the Weather App to Bluemix, production space
                        sh '''
                                echo "Deploying...."
                            '''
                        // use "publishDeployRecord" method to publish deploy record
                        publishDeployRecord environment: "PRODUCTION", appUrl: "http://prod-umesh.mybluemix.net", result:"SUCCESS"
                    }
                    catch(Exception e) {
                        publishDeployRecord environment: "PRODUCTION", appUrl: "http://prod-umesh.mybluemix.net", result:"FAIL"
                    }
                }
            }
        }
    }
}
